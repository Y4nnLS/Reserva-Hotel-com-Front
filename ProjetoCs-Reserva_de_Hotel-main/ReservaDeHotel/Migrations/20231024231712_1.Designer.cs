// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReservaDeHotel.Data;

#nullable disable

namespace ReservaDeHotel.Migrations
{
    [DbContext(typeof(HotelDbContext))]
    [Migration("20231024231712_1")]
    partial class _1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("ReservaDeHotel.Models.Avaliacao", b =>
                {
                    b.Property<int>("IdAvaliacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AvaliacaoEstrelas")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comentario")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataAvaliacao")
                        .HasColumnType("TEXT");

                    b.Property<int?>("HotelIDHotel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdHotel")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdAvaliacao");

                    b.HasIndex("HotelIDHotel");

                    b.ToTable("Avaliacao");
                });

            modelBuilder.Entity("ReservaDeHotel.Models.Cidade", b =>
                {
                    b.Property<int>("IdCidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Estado")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<string>("País")
                        .HasColumnType("TEXT");

                    b.HasKey("IdCidade");

                    b.ToTable("Cidade");
                });

            modelBuilder.Entity("ReservaDeHotel.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumeroTelefone")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Senha")
                        .HasColumnType("TEXT");

                    b.HasKey("ClienteId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("ReservaDeHotel.Models.Comodidade", b =>
                {
                    b.Property<int>("IDComodidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Disponibilidade")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IDHotel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumeroDoQuarto")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PrecoPorNoite")
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoDeQuarto")
                        .HasColumnType("TEXT");

                    b.HasKey("IDComodidade");

                    b.ToTable("Comodidade");
                });

            modelBuilder.Entity("ReservaDeHotel.Models.Dono", b =>
                {
                    b.Property<int>("DonoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int>("HotelIDHotel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumeroTelefone")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Senha")
                        .HasColumnType("TEXT");

                    b.HasKey("DonoId");

                    b.HasIndex("HotelIDHotel");

                    b.ToTable("Dono");
                });

            modelBuilder.Entity("ReservaDeHotel.Models.EstadiaHotel", b =>
                {
                    b.Property<int>("IdEstadia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataSaida")
                        .HasColumnType("TEXT");

                    b.Property<int>("QtdQuartos")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdEstadia");

                    b.ToTable("EstadiaHotel");
                });

            modelBuilder.Entity("ReservaDeHotel.Models.Hotel", b =>
                {
                    b.Property<int>("IDHotel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("AvaliacaoMedia")
                        .HasColumnType("REAL");

                    b.Property<int?>("CidadeIdCidade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdDono")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ListaDeQuartos")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<int>("NumeroDeQuartosDisponiveis")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NumeroTotalDeQuartos")
                        .HasColumnType("INTEGER");

                    b.HasKey("IDHotel");

                    b.HasIndex("CidadeIdCidade");

                    b.HasIndex("IdDono");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("ReservaDeHotel.Models.Pagamento", b =>
                {
                    b.Property<int>("IdPagamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("TEXT");

                    b.Property<int>("IdReservaEstadia")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MetodoPagamento")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ReservaHotelIdReserva")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("IdPagamento");

                    b.HasIndex("ReservaHotelIdReserva");

                    b.ToTable("Pagamento");
                });

            modelBuilder.Entity("ReservaDeHotel.Models.ReservaHotel", b =>
                {
                    b.Property<int>("IdReserva")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EstadiaIdEstadia")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeHospede")
                        .HasColumnType("TEXT");

                    b.HasKey("IdReserva");

                    b.HasIndex("EstadiaIdEstadia");

                    b.ToTable("ReservaHotel");
                });

            modelBuilder.Entity("ReservaDeHotel.Models.Avaliacao", b =>
                {
                    b.HasOne("ReservaDeHotel.Models.Hotel", null)
                        .WithMany("ListaAvaliacoes")
                        .HasForeignKey("HotelIDHotel");
                });

            modelBuilder.Entity("ReservaDeHotel.Models.Dono", b =>
                {
                    b.HasOne("ReservaDeHotel.Models.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelIDHotel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("ReservaDeHotel.Models.Hotel", b =>
                {
                    b.HasOne("ReservaDeHotel.Models.Cidade", null)
                        .WithMany("ListaHoteis")
                        .HasForeignKey("CidadeIdCidade");

                    b.HasOne("ReservaDeHotel.Models.Dono", "Dono")
                        .WithMany("ListaHoteis")
                        .HasForeignKey("IdDono")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dono");
                });

            modelBuilder.Entity("ReservaDeHotel.Models.Pagamento", b =>
                {
                    b.HasOne("ReservaDeHotel.Models.ReservaHotel", null)
                        .WithMany("Pagamento")
                        .HasForeignKey("ReservaHotelIdReserva");
                });

            modelBuilder.Entity("ReservaDeHotel.Models.ReservaHotel", b =>
                {
                    b.HasOne("ReservaDeHotel.Models.EstadiaHotel", "Estadia")
                        .WithMany()
                        .HasForeignKey("EstadiaIdEstadia");

                    b.Navigation("Estadia");
                });

            modelBuilder.Entity("ReservaDeHotel.Models.Cidade", b =>
                {
                    b.Navigation("ListaHoteis");
                });

            modelBuilder.Entity("ReservaDeHotel.Models.Dono", b =>
                {
                    b.Navigation("ListaHoteis");
                });

            modelBuilder.Entity("ReservaDeHotel.Models.Hotel", b =>
                {
                    b.Navigation("ListaAvaliacoes");
                });

            modelBuilder.Entity("ReservaDeHotel.Models.ReservaHotel", b =>
                {
                    b.Navigation("Pagamento");
                });
#pragma warning restore 612, 618
        }
    }
}
